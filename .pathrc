echo 'init in ~/.pathrc'
# export PS1="[%n@%m:%~ %T]%#"
# PROMPT="%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%1~ %{$reset_color%}%# "
#RPROMPT="[%{$fg[yellow]%}%?%{$reset_color%}]"
# export MANPATH="/usr/local/man:$MANPATH"
# export MANPATH=/opt/local/share/man:$MANPATH

export LC_ALL=zh_CN.UTF-8
export LANG=zh_CN.UTF-8

# Compilation flags
export ARCHFLAGS="-arch x86_64"
# ssh
export SSH_KEY_PATH="~/.ssh/dsa_id"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
else
    export EDITOR='mvim'
fi

if [ `uname` = 'Darwin' ]; then
    export JAVA_HOME=`/usr/libexec/java_home`
fi
for p in "/usr/java/default" "/usr/java/latest"; do
    if [ -d $p ]; then
        export JAVA_HOME=$p
    fi
done
if [ -n $JAVA_HOME ]; then
    export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
else
    echo 'JAVA_HOME not set'
fi

export M2_HOME=/Users/zhuliang/program/apache/apache-maven-3.2.1/
if [ -d $M2_HOME ]; then
    export PATH=$PATH:$M2_HOME/bin
fi

export ANT_HOME=/Users/zhuliang/program/apache-ant-1.9.4/
if [ -d $ANT_HOME ]; then
    export PATH=$PATH:$ANT_HOME/bin
fi

# for pyside libraryes
export DYLD_LIBRARY_PATH=/Library/Python/2.7/site-packages/PySide/

CODE_REPOS=/Users/zhuliang/dance/repos/
ZL_PY_HOME=${CODE_REPOS}/pyutil/:${CODE_REPOS}/ss_lib/:${CODE_REPOS}/ss_thrift_gen/:${CODE_REPOS}:
alias pyzl='export PYTHONPATH=$ZL_PY_HOME;python '

function test_sum() {
    echo $[ $1+ $2 ]
}

function greps() {
  if [ $# -eq 0 ];then
    echo 'usage: sh $0 grep_exp0 grep_exp1 ...'
    exit 1
  fi

  my_command="ps aux"
  for cur_exp in $*
  do
    my_command="$my_command | grep $cur_exp"
  done

  #echo $my_command
  eval $my_command
}


function grepakill() {
  if [ $# -eq 0 ];then
    echo 'usage: sh $0 grep_exp0 grep_exp1 ...'
    exit 1
  fi

  my_command="ps aux"
  for cur_exp in $*
  do
    my_command="$my_command | grep $cur_exp"
  done
  my_command="$my_command | awk '{print \$2}' | xargs kill"
  #echo $my_command
  eval $my_command
}
